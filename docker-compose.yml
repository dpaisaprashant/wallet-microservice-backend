version: '3'

networks:
  laravel:
  wallet-microservice-core_laravel:
    external: true
  wallet-microservice-nchl_laravel:
    external: true
  wallet-microservice-nps_laravel:
    external: true
  wallet-microservice-khalti_spring-boot-mysql-network:
    external: true


services:
  site:
    build:
      context: .
      dockerfile: nginx.dockerfile
    container_name: nginx_backend_wallet
    ports:
      - "8083:80"
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - php
      - mysql
      - phpmyadmin
      - mongo
      - mongo-express
    networks:
      - laravel
      - wallet-microservice-core_laravel
      - wallet-microservice-nchl_laravel
      - wallet-microservice-nps_laravel
      - wallet-microservice-khalti_spring-boot-mysql-network

  mysql:
    image: mysql:5.7.29
    container_name: mysql_backend_wallet
    restart: unless-stopped
    tty: true
    ports:
      - "3309:3306"
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: mysql_backend_wallet
      MYSQL_USER: mysql_backend_wallet
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - laravel
      - wallet-microservice-core_laravel
      - wallet-microservice-nchl_laravel
      - wallet-microservice-nps_laravel
      - wallet-microservice-khalti_spring-boot-mysql-network

  php:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: php_backend_wallet
    volumes:
      - ./src:/var/www/html:delegated
    ports:
      - "9033:9000"
    networks:
      - laravel
      - wallet-microservice-core_laravel
      - wallet-microservice-nchl_laravel
      - wallet-microservice-nps_laravel
      - wallet-microservice-khalti_spring-boot-mysql-network

  composer:
    build:
      context: .
      dockerfile: composer.dockerfile
    container_name: composer_backend_wallet
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: laravel
    networks:
      - laravel
      - wallet-microservice-core_laravel
      - wallet-microservice-nchl_laravel
      - wallet-microservice-nps_laravel
      - wallet-microservice-khalti_spring-boot-mysql-network
    entrypoint: ['composer', '--ignore-platform-reqs']

  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: artisan_backend_wallet
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - mysql
    working_dir: /var/www/html
    user: laravel
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel
      - wallet-microservice-core_laravel
      - wallet-microservice-nchl_laravel
      - wallet-microservice-nps_laravel
      - wallet-microservice-khalti_spring-boot-mysql-network

  phpmyadmin:
    depends_on:
      - mysql
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin_backend_wallet
    restart: always
    ports:
      - 8093:80
    environment:
      PMA_HOST: mysql_backend_wallet
      MYSQL_ROOT_PASSWORD: secret
    networks:
      - laravel
      - wallet-microservice-core_laravel
      - wallet-microservice-nchl_laravel
      - wallet-microservice-nps_laravel
      - wallet-microservice-khalti_spring-boot-mysql-network

  mongo:
    container_name: mongo-backend
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports: 
      - "27019:27017"
    restart: always
    volumes: 
      - ./mongo:/data/db
    networks:
      - laravel

  mongo-express:
    container_name: mongo-express-backend
    image: mongo-express
    restart: always
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password      
    ports: 
      - "8021:8081"
    networks:
      - laravel
